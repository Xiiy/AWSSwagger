---
swagger: "2.0"
info:
  description: An API that allows users to update documents and fetch documents
  version: 2.0.0
  title: Document Service API
  termsOfService: http://swagger.io/terms/
  contact:
    email: samaraxiang@yahoo.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /Wayhead8/Document/1.0.0
tags:
- name: documents
  description: Documents Management System
schemes:
- https
paths:
  /documents:
    post:
      tags:
      - documents
      description: Add new documents into system
      operationId: postDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: document name
        required: true
        schema:
          $ref: '#/definitions/Document'
      responses:
        "200":
          description: item created
          schema:
            $ref: '#/definitions/ReturnDoc'
        "400":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:054076379493:function:putDocumentbyId/invocations
        httpMethod: POST
        passthroughBehavior: when_no_match
  /documents/{id}:
    get:
      tags:
      - documents
      description: Obtain the information of the documents
      operationId: getDocumentbyId
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of document to return
        required: true
        type: string
      - name: content-type
        in: header
        description: Header File
        required: false
        type: string
      responses:
        "200":
          description: Successfully obtain the document data
          schema:
            $ref: '#/definitions/ReturnDoc'
        "400":
          description: Invalid ID supplied
        "404":
          description: Document not found
    put:
      tags:
      - documents
      description: Update the documents in the system
      operationId: putDocumentbyId
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of uploaded file
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RequestDoc'
      responses:
        "200":
          description: item created
          schema:
            $ref: '#/definitions/ReturnDoc'
        "400":
          description: Invalid ID supplied
        "404":
          description: ID not found
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:054076379493:function:putDocumentbyId/invocations
        httpMethod: PUT
        passthroughBehavior: when_no_match
    delete:
      tags:
      - documents
      description: delete the information of the documents
      operationId: deleteDocumentbyId
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of document to return
        required: true
        type: string
      responses:
        "200":
          description: Successfully delete the document data
        "400":
          description: Invalid ID supplied
        "404":
          description: Document not found
definitions:
  Document:
    type: object
    properties:
      doc_name:
        type: string
        example: content.txt
      body:
        type: string
        example: This is the example for content to be posted
    title: Document
    description: Model containing document information
  ReturnDoc:
    type: object
    properties:
      id:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      body:
        type: string
        example: This is the content of file requested
    title: ReturnDocument
    description: Model containing basic information of document
  RequestDoc:
    properties:
      id:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      doc_name:
        type: string
        example: content.txt
      body:
        type: string
        example: This is the example for content to be posted
    title: RequestedDocument
    description: Model containing the details to post a new documentation
x-aws-api-id: sjbdctohol
